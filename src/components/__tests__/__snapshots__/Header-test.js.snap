exports[`<Header /> have return button 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      Header
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "transparent",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Header /> have right button 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      Header
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Header /> no return button 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "transparent",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      Header
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "transparent",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Header /> render if headText is empty 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "transparent",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Header /> render if headText is not empty 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      test
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "transparent",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Header /> set right button size 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "column",
        "justifyContent": "center",
        "padding": 10,
        "paddingTop": 20
      },
      Object {
        "backgroundColor": "#F78B6D"
      }
    ]
  }>
  <View
    style={
      Object {
        "height": 14,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 375
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flexDirection": "row",
        "justifyContent": "space-between"
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 20,
          "fontWeight": "bold"
        }
      }>
      Header
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function bound touchableHandleResponderGrant]}
      onResponderMove={[Function bound touchableHandleResponderMove]}
      onResponderRelease={[Function bound touchableHandleResponderRelease]}
      onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
      onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
      onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
      style={
        Object {
          "opacity": 1
        }
      }
      testID={undefined}>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "center"
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "FontAwesome",
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "normal"
              },
              undefined
            ]
          }>
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
